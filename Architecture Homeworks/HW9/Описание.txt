Над сервисами турниров, боев, пользователей и уведомлений реализованы CRUD-операции. Таким образом, у каждого сервиса развернута своя база данных.

Многие действия инициирует сам пользватель, они идут в сервис агента. Далее, из сервиса агента они идут в соответствующий сервис. Например, пользователь запускает агента. Ему надо авторизоваться через POST /authorization/login, сервис агента отправит запрос в сервис авторизации методом POST /login, тот, в свою очередь, проверит пользователя в сервисе пользователей через POST /check. Далее пользователь захотел создать турнир, тогда вызовется POST /tournament/start у сервиса агента, сервис агента в свою очередь вызовет POST /start у сервиса турниров и положит туда данные пользователя, сервис турниров собирает пулл боев через GET /create, потом вызывает POST /start у сервиса боя. Когда бой завершится, сервис боев вызовет метод POST /user/notification у сервиса нотификаций, тот, в свою очередь, сформирует нотификацию и отправит ее в сервис пользователей через POST /notification/show, и пользователю покажется уведомление. Сервис пользователей использует, допустим, Firebase для показа уведомлений пользователю, таким образом ему не надо быть связанным с сервисом агента. Далее, когда турнир завершится, вызовется POST /user/rating у сервиса рейтинга, а тот вызовет POST /rating для увеличение рейтинга пользователя.

Узкие места и проблемы:
- Сервис пользователей. Многие сервисы от него зависят, поэтому если он упадет, то эти сервисы встанут. Способ решения - реплицировать БД сервиса пользователей, повышать отказоустойчивость сервиса.
- Длинные цепочки вызовов, которые проходят через много сервисов. Это может повысить время ожидания пользователя и повысить вероятность отказа пользователя от нашей игры. Кроме того, Способ решения - использовать механизмы и технологии, которые будут ускорят отправку сообщений от сервиса к сервису.

Компоненты, к которым часто будут меняться требования:
- Сервис агента. Он предполагает некоторую UI-часть, таким образом будут появляться все новые и новые эндпоинты у этого сервиса при расширении UI-интерфейса. Кроме того, при редизайне могут меняться уже существующие ручки.
- Сервис уведомлений. Тут может меняться все, что угодно - от формата уведомлений и их содержания, до способа отправки.
